apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  labels:
    app: grafana
    component: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
        component: monitoring
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:11.0.0
          ports:
            - containerPort: 3000
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          env:
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: "admin"
            - name: GF_SMTP_ENABLED
              value: "true"
            - name: GF_SMTP_HOST
              value: "smtp.gmail.com:465"
            - name: GF_SMTP_STARTTLS_POLICY
              value: "NoStartTLS"
            - name: GF_SMTP_USER
              value: "stefangolubov84@gmail.com"
            - name: GF_SMTP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana-smtp
                  key: smtp_password
            - name: GF_SMTP_FROM_ADDRESS
              value: "stefangolubov84@gmail.com"
            - name: GF_SMTP_FROM_NAME
              value: "Grafana"
            - name: GF_SMTP_SKIP_VERIFY
              value: "true"
            - name: GF_LOG_LEVEL
              value: "debug"
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
              readOnly: false
            - name: grafana-dashboards
              mountPath: /var/lib/grafana/dashboards
              readOnly: true
            - name: grafana-provisioning-dashboards
              mountPath: /etc/grafana/provisioning/dashboards
              readOnly: true
            - name: grafana-provisioning-datasources
              mountPath: /etc/grafana/provisioning/datasources
              readOnly: true
            - name: grafana-provisioning-alert-rules
              mountPath: /etc/grafana/provisioning/alerting
              readOnly: true
      volumes:
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: grafana-data
        - name: grafana-dashboards
          configMap:
            name: grafana-dashboards
        - name: grafana-provisioning-dashboards
          configMap:
            name: grafana-provisioning-dashboards
        - name: grafana-provisioning-datasources
          configMap:
            name: grafana-provisioning-datasources
        - name: grafana-provisioning-alert-rules
          configMap:
            name: grafana-provisioning-alert-rules